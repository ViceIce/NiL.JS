name: .NET Core

on: [push]

env:
  CI: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        framework: [netcoreapp2.1, net472]
        exclude:
          - os: ubuntu-latest
            framework: net472
          - os: macos-latest
            framework: net472

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core 2.1.202
      if: matrix.os != 'windows-latest'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1.202

    - name: Setup .NET Core 2.1.804
      if: matrix.os != 'windows-latest'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.1.804

    - name: Setup .NET Core 3.1.102
      if: matrix.os != 'windows-latest'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.102

    - name: Setup side by side .NET SDKs on *nix
      if: matrix.os != 'windows-latest'
      run: |
        rsync -a ${DOTNET_ROOT/3.1.102/2.1.202}/* $DOTNET_ROOT/
        rsync -a ${DOTNET_ROOT/3.1.102/2.1.804}/* $DOTNET_ROOT/

    - run: |
        dotnet --info
        mkdir -p "$HOME"/.dotnet
        touch "$HOME"/.dotnet/"$(dotnet --version)".dotnetFirstUseSentinel
      shell: bash

    - name: Restore
      run: |
        dotnet restore

    - name: Generate tests
      working-directory: ./FunctionalTests
      run: dotnet ../Utility/tt4/tiny-t4.dll

    - name: Build
      run: |
        dotnet build --no-restore ./IntegrationTests
        dotnet build --no-restore ./FunctionalTests

    - name: IntegrationTests
      continue-on-error: true
      run: dotnet test --no-build -f ${{ matrix.framework }} ./IntegrationTests

    - name: FunctionalTests
      continue-on-error: true
      run: dotnet test --no-build -f ${{ matrix.framework }} ./FunctionalTests
  